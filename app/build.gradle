plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-parcelize'
    id "com.google.protobuf" version "0.8.17"
/**/}


ext.versionMajor = 0
ext.versionMinor = 0
ext.versionPatch = 1
ext.versionClassifier = null
ext.isSnapshot = true

def keystorePropertiesFile = rootProject.file("keystore.properties")
def endpointPropertiesFile = file('endpoint.properties')
def keystoreProperties = new Properties()
def endpointProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
endpointProperties.load(new FileInputStream(endpointPropertiesFile))

android {
    compileSdk 33

    signingConfigs {
        generalConfig {
            keyAlias = keystoreProperties["keyAlias"]
            keyPassword = keystoreProperties["keyPassword"]
            storeFile = file(keystoreProperties["storeFile"])
            storePassword = keystoreProperties["storePassword"]
        }
    }

    defaultConfig {
        applicationId "com.android.borsappc"
        minSdk 21
        targetSdk 32
        versionCode generateVersionCode()
        versionName generateVersionName()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.generalConfig
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
        }
        release {
            minifyEnabled true
            // Use minifyEnabled for activating R* only, increase compose build time presumably
//            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "env"

    productFlavors {
        dev {
            manifestPlaceholders = [appName: "@string/app_name"]
            dimension "env"
            versionNameSuffix "-dev"
            buildConfigField 'String', 'API_URL', endpointProperties['DEV_URL']
        }
        prod {
            manifestPlaceholders = [appName: "@string/app_name"]
            dimension "env"
            buildConfigField 'String', 'API_URL', endpointProperties['PROD_URL']
        }
    }

    buildFeatures {
        // Enables Jetpack Compose for this module
        compose true
        buildConfig true
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }

    buildToolsVersion '30.0.3'
    namespace 'com.android.borsappc'
}

private Integer /**/generateVersionCode() {
	return versionMajor * 10000 + versionMinor * 100 + versionPatch
}

private String generateVersionName() {
	String versionName = "${versionMajor}.${versionMinor}.${versionPatch}"
	if (versionClassifier == null && isSnapshot) {
		versionClassifier = "SNAPSHOT"
	}

	if (versionClassifier != null) {
		versionName += "-" + versionClassifier
	}
	return versionName
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    implementation 'androidx.core:core-ktx:1.9.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //==================== Lifecycle ====================
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // ViewModel utilities for Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // Annotation processor
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    //==================== Compose ====================
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:1.3.1"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation 'androidx.activity:activity-compose:1.6.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:1.3.1"

    //==================== Dependency Injection ====================
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    //==================== Data Store ====================
    implementation  "androidx.datastore:datastore:1.0.0"
    implementation 'com.google.protobuf:protobuf-javalite:3.18.0'

    //==================== Logging ====================
    implementation 'com.jakewharton.timber:timber:5.0.1'

    //==================== Networking ====================
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    //==================== Database ====================
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-paging:$room_version"

    //==================== Navigation ====================
    implementation "androidx.navigation:navigation-compose:2.5.3"

    // Navigator
    implementation "cafe.adriel.voyager:voyager-navigator:$voyager_version"
    // BottomSheetNavigator
//    implementation "cafe.adriel.voyager:voyager-bottom-sheet-navigator:$voyager_version"
    // Transitions
    implementation "cafe.adriel.voyager:voyager-transitions:$voyager_version"
    // Android ViewModel integration
    implementation "cafe.adriel.voyager:voyager-androidx:$voyager_version"
    // Hilt integration
    implementation "cafe.adriel.voyager:voyager-hilt:$voyager_version"

    //==================== Paging ====================
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation "androidx.paging:paging-compose:1.0.0-alpha16"

    //==================== Memory Leak Detection ====================
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'
}

kapt {
    correctErrorTypes true
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.18.0'
    }
    generateProtoTasks {
        all().configureEach { task ->
            task.builtins {
                java {
                    option "lite"
                }
            }
        }
    }
}